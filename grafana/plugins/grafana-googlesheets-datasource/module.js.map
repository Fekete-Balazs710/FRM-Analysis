{"version":3,"file":"module.js","mappings":"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","sources":["webpack:///../node_modules/@grafana/google-sdk/dist/index.production.js","webpack:///../node_modules/@grafana/google-sdk/index.js","webpack:///external amd \"@grafana/data\"","webpack:///external amd \"@grafana/runtime\"","webpack:///external amd \"@grafana/ui\"","webpack:///external amd \"lodash\"","webpack:///external amd \"react\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./components/QueryEditor.tsx","webpack:///./types.ts","webpack:///./components/ConfigurationHelp.tsx","webpack:///./components/ConfigEditor.tsx","webpack:///./components/MetaInspector.tsx","webpack:///./DataSource.ts","webpack:///./module.ts","webpack:///./utils.ts"],"sourcesContent":["Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"@grafana/data\"),t=require(\"@grafana/ui\"),a=require(\"react\"),n=require(\"lodash\");function l(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var o=l(a);const i={JWT:\"jwt\",GCE:\"gce\"},r=\"Configuration help box\",s=\"Configuration drop zone\",c=\"Configuration text area\",u=\"Paste JWT button\",d=\"JWT form\",p=\"JWT button\",f=\"GCE button\",m=\"Private Key Path Input\",g=\"Private Key Input\",h=\"Fill JWT info manually\",y=\"Show private key path input\",E=\"Show private key input\",v=[\"private_key\",\"token_uri\",\"client_email\",\"project_id\"],T=({onChange:e,showConfigEditor:n})=>{const[l,i]=a.useState(),[r,d]=a.useState(null),p=t.useTheme2(),f=a.useCallback((e=>{i(null),d(!0)}),[d]),m=a.useCallback((e=>{d(null),i(null)}),[d]),g=a.useCallback((t=>{if(\"\"!==t.trim()){let a;try{a=JSON.parse(t)}catch(e){i(\"Invalid JWT token\")}const l=b(a);l.isValid?(n(),e({privateKey:a.private_key,tokenUri:a.token_uri,clientEmail:a.client_email,projectId:a.project_id})):i(l.error)}}),[i,e,n]);return o.default.createElement(o.default.Fragment,null,o.default.createElement(t.Field,{label:\"JWT token\",invalid:Boolean(l),description:r?\"Paste JWT token below\":\"Upload or paste Google JWT token\",error:l},o.default.createElement(o.default.Fragment,null,!0!==r&&o.default.createElement(\"div\",{\"data-testid\":s},t.FileDropzone&&o.default.createElement(t.FileDropzone,{options:{multiple:!1,accept:\".json\"},readAs:\"readAsText\",onLoad:e=>{g(e),d(!1)}},o.default.createElement(\"p\",{style:{margin:0,fontSize:`${p.typography.h4.fontSize}`,textAlign:\"center\"}},\"Drop the Google JWT file here\",o.default.createElement(\"br\",null),o.default.createElement(\"br\",null),o.default.createElement(t.Button,{fill:\"outline\"},\"Click to browse files\")))),r&&o.default.createElement(t.TextArea,{\"data-testid\":c,autoFocus:!0,invalid:Boolean(l),placeholder:\"Paste Google JWT token here\",onBlur:e=>g(e.currentTarget.value),rows:12}))),!r&&o.default.createElement(o.default.Fragment,null,o.default.createElement(t.Button,{\"data-testid\":u,type:\"button\",fill:\"outline\",style:{color:`${p.colors.primary.text}`},onClick:f},\"Paste JWT Token\"),o.default.createElement(\"span\",{style:{paddingRight:\"10px\",paddingLeft:\"10px\"}},\"or\"),o.default.createElement(t.Button,{\"data-testid\":h,type:\"button\",fill:\"outline\",style:{color:`${p.colors.primary.text}`},onClick:n},\"Fill In JWT Token manually\")),r&&l&&o.default.createElement(t.Field,null,o.default.createElement(t.Button,{type:\"button\",fill:\"outline\",style:{color:`${p.colors.primary.text}`},onClick:m},\"Upload JWT Token\")))},b=e=>{if(!n.isObject(e))return{isValid:!1,error:\"Invalid JWT token\"};const t=v.filter((t=>!e[t]));return t.length>0?{isValid:!1,error:`Missing keys: ${t.join(\", \")}`}:{isValid:!0}},{SecretFormField:j}=t.LegacyForms;var k;!function(e){e.PATH=\"path\",e.JWT=\"jwt\"}(k||(k={}));const J=({options:a,onReset:n,onOptionsChange:l})=>{var i;const[r,s]=o.default.useState((e=>\"privateKeyPath\"in e&&\"\"!==e.privateKeyPath?k.PATH:k.JWT)(a.jsonData)),c=t=>e.onUpdateDatasourceJsonDataOption({options:a,onOptionsChange:l},t),u=()=>{r===k.JWT?s(k.PATH):s(k.JWT)},p=o.default.createElement(\"span\",null,r===k.PATH?o.default.createElement(\"a\",{className:\"external-link\",onClick:u,\"data-testid\":E},\"Paste private key\"):\"Paste private key\",\" \",\"or  \",r===k.JWT?o.default.createElement(\"a\",{className:\"external-link\",onClick:u,\"data-testid\":y},\"provide path to private file\"):\"provide path to private key file\"),f={isConfigured:Boolean(a.secureJsonFields.privateKey),value:(null===(i=a.secureJsonData)||void 0===i?void 0:i.privateKey)||\"\",placeholder:\"Enter Private key\",onReset:()=>n(),onChange:e.onUpdateDatasourceSecureJsonDataOption({options:a,onOptionsChange:l},\"privateKey\"),\"data-testid\":g};return o.default.createElement(\"div\",{\"data-testid\":d},o.default.createElement(t.Field,{label:\"Project ID\"},o.default.createElement(t.Input,{id:\"defaultProject\",width:60,value:a.jsonData.defaultProject||\"\",onChange:c(\"defaultProject\")})),o.default.createElement(t.Field,{label:\"Client email\"},o.default.createElement(t.Input,{width:60,id:\"clientEmail\",value:a.jsonData.clientEmail||\"\",onChange:c(\"clientEmail\")})),o.default.createElement(t.Field,{label:\"Token URI\"},o.default.createElement(t.Input,{width:60,id:\"tokenUri\",value:a.jsonData.tokenUri||\"\",onChange:c(\"tokenUri\")})),r===k.PATH&&o.default.createElement(t.Field,{label:\"Private key path\",description:p},o.default.createElement(t.Input,{width:60,id:\"privateKeyPath\",value:a.jsonData.privateKeyPath||\"\",placeholder:\"File location of your private key (e.g. /etc/secrets/gce.pem)\",onChange:c(\"privateKeyPath\"),\"data-testid\":m})),r===k.JWT&&o.default.createElement(o.default.Fragment,null,t.SecretInput?o.default.createElement(t.Field,{label:\"Private key\",description:p},o.default.createElement(t.SecretInput,Object.assign({},f,{width:60}))):o.default.createElement(j,Object.assign({},f,{label:\"Private key\",labelWidth:10,inputWidth:20}))))};function C(n){const{options:l,onOptionsChange:r,authOptions:s}=n,{jsonData:c,secureJsonFields:u,secureJsonData:d}=l,p=()=>Boolean(c.clientEmail&&c.defaultProject&&c.tokenUri&&(u&&u.privateKey||c.privateKeyPath));c.authenticationType||(c.authenticationType=i.JWT);const[f,m]=a.useState(O(c.authenticationType)),[g,h]=a.useState(p());return o.default.createElement(o.default.Fragment,null,o.default.createElement(t.FieldSet,{label:\"Authentication\"},o.default.createElement(t.Field,{label:\"Authentication type\"},o.default.createElement(t.RadioButtonGroup,{options:s,value:c.authenticationType||i.JWT,onChange:e=>{h(p()),r(Object.assign(Object.assign({},l),{jsonData:Object.assign(Object.assign({},l.jsonData),{authenticationType:e})})),m(O(e))}}))),f&&o.default.createElement(t.FieldSet,{label:\"JWT Key Details\"},g?o.default.createElement(J,{options:l,onReset:()=>(e=>{const t=Object.assign({},d),a=e?Object.assign(Object.assign({},l.jsonData),e):Object.assign({},l.jsonData);delete a.clientEmail,delete a.defaultProject,delete a.tokenUri,delete a.privateKeyPath,delete t.privateKey,m(!0),h(!1),r(Object.assign(Object.assign({},l),{secureJsonFields:Object.assign(Object.assign({},l.secureJsonFields),{privateKey:!1}),secureJsonData:t,jsonData:a}))})(),onOptionsChange:r}):o.default.createElement(T,{showConfigEditor:()=>{h(!0)},onChange:e=>{r(Object.assign(Object.assign({},l),{secureJsonFields:Object.assign(Object.assign({},u),{privateKey:!0}),secureJsonData:Object.assign(Object.assign({},d),{privateKey:e.privateKey}),jsonData:Object.assign(Object.assign({},c),{clientEmail:e.clientEmail,defaultProject:e.projectId,tokenUri:e.tokenUri})}))}}),\" \"),c.authenticationType===i.GCE&&o.default.createElement(t.Field,{label:\"Default project\"},o.default.createElement(t.Input,{id:\"defaultProject\",width:60,value:l.jsonData.defaultProject||\"\",onChange:e.onUpdateDatasourceJsonDataOption(n,\"defaultProject\")})))}const O=e=>e===i.JWT||void 0===e,P=[{label:\"Google JWT File\",value:i.JWT,ariaLabel:p},{label:\"GCE Default Service Account\",value:i.GCE,ariaLabel:f}];exports.AuthConfig=C,exports.ConnectionConfig=e=>{const{options:{jsonData:a}}=e;a.authenticationType||(a.authenticationType=i.JWT);const n=a.authenticationType===i.JWT||void 0===a.authenticationType;return o.default.createElement(o.default.Fragment,null,o.default.createElement(C,Object.assign({authOptions:P},e)),o.default.createElement(\"div\",{className:\"grafana-info-box\",style:{marginTop:\"16px\"},\"data-testid\":r},o.default.createElement(\"p\",null,\"Don’t know how to get a service account key file or create a service account? Read more\",\" \",o.default.createElement(\"a\",{className:\"external-link\",target:\"_blank\",rel:\"noopener noreferrer\",href:\"https://grafana.com/docs/grafana/latest/datasources/google-cloud-monitoring/google-authentication/\"},\"in the documentation.\"))),!n&&o.default.createElement(t.Alert,{title:\"\",severity:\"info\"},\"Verify GCE default service account by clicking Save & Test\"))},exports.GOOGLE_AUTH_TYPE_OPTIONS=P,exports.GoogleAuthType=i,exports.JWTConfigEditor=T,exports.JWTForm=J;\n//# sourceMappingURL=index.production.js.map\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/index.production.js');\n} else {\n  module.exports = require('./dist/index.development.js');\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__305__;","module.exports = __WEBPACK_EXTERNAL_MODULE__545__;","module.exports = __WEBPACK_EXTERNAL_MODULE__388__;","module.exports = __WEBPACK_EXTERNAL_MODULE__980__;","module.exports = __WEBPACK_EXTERNAL_MODULE__650__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { QueryEditorProps } from '@grafana/data';\nimport { DataSourceOptions } from '@grafana/google-sdk';\nimport { InlineFormLabel, LegacyForms, LinkButton, Segment, SegmentAsync } from '@grafana/ui';\nimport React, { ChangeEvent, PureComponent } from 'react';\nimport { DataSource } from '../DataSource';\nimport { SheetsQuery } from '../types';\n\ntype Props = QueryEditorProps<DataSource, SheetsQuery, DataSourceOptions>;\n\nexport function getGoogleSheetRangeInfoFromURL(url: string): Partial<SheetsQuery> {\n  let idx = url?.indexOf('/d/');\n  if (!idx) {\n    // The original value\n    return { spreadsheet: url };\n  }\n\n  let id = url.substring(idx + 3);\n  idx = id.indexOf('/');\n  if (idx) {\n    id = id.substring(0, idx);\n  }\n\n  idx = url.indexOf('range=');\n  if (idx > 0) {\n    const sub = url.substring(idx + 'range='.length);\n    return { spreadsheet: id, range: sub };\n  }\n  return { spreadsheet: id };\n}\n\nexport function toGoogleURL(info: SheetsQuery): string {\n  let url = `https://docs.google.com/spreadsheets/d/${info.spreadsheet}/view`;\n  if (info.range) {\n    url += '#range=' + info.range;\n  }\n  return url;\n}\n\nconst defaultCacheDuration = 300;\n\nexport const formatCacheTimeLabel = (s: number = defaultCacheDuration) => {\n  if (s < 60) {\n    return s + 's';\n  } else if (s < 3600) {\n    return s / 60 + 'm';\n  }\n\n  return s / 3600 + 'h';\n};\n\nexport class QueryEditor extends PureComponent<Props> {\n  componentDidMount() {\n    if (!this.props.query.hasOwnProperty('cacheDurationSeconds')) {\n      this.props.query.cacheDurationSeconds = defaultCacheDuration; // um :(\n    }\n  }\n\n  onRangeChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange({\n      ...this.props.query,\n      range: event.target.value,\n    });\n  };\n\n  onSpreadsheetIDChange = (item: any) => {\n    const { query, onRunQuery, onChange } = this.props;\n\n    if (!item.value) {\n      return; // ignore delete?\n    }\n\n    const v = item.value;\n    // Check for pasted full URLs\n    if (/(.*)\\/spreadsheets\\/d\\/(.*)/.test(v)) {\n      onChange({ ...query, ...getGoogleSheetRangeInfoFromURL(v) });\n    } else {\n      onChange({ ...query, spreadsheet: v });\n    }\n    onRunQuery();\n  };\n\n  toggleUseTimeFilter = (event?: React.SyntheticEvent<HTMLInputElement>) => {\n    const { query, onChange, onRunQuery } = this.props;\n    onChange({\n      ...query,\n      useTimeFilter: !query.useTimeFilter,\n    });\n    onRunQuery();\n  };\n\n  render() {\n    const { query, onRunQuery, onChange, datasource } = this.props;\n    return (\n      <>\n        <div className=\"gf-form-inline\">\n          <InlineFormLabel\n            width={10}\n            className=\"query-keyword\"\n            tooltip={\n              <p>\n                The <code>spreadsheetId</code> is used to identify which spreadsheet is to be accessed or altered. This\n                ID is the value between the &quot/d/&quot and the &quot/edit&quot in the URL of your spreadsheet.\n              </p>\n            }\n          >\n            Spreadsheet ID\n          </InlineFormLabel>\n          <SegmentAsync\n            loadOptions={() => datasource.getSpreadSheets()}\n            placeholder=\"Enter SpreadsheetID\"\n            value={query.spreadsheet}\n            allowCustomValue={true}\n            onChange={this.onSpreadsheetIDChange}\n          ></SegmentAsync>\n          {query.spreadsheet && (\n            <LinkButton\n              style={{ marginTop: 1 }}\n              fill=\"text\"\n              icon=\"link\"\n              href={toGoogleURL(query)}\n              target=\"_blank\"\n            ></LinkButton>\n          )}\n          <div className=\"gf-form gf-form--grow\">\n            <div className=\"gf-form-label gf-form-label--grow\" />\n          </div>\n        </div>\n        <div className=\"gf-form-inline\">\n          <InlineFormLabel\n            width={10}\n            className=\"query-keyword\"\n            tooltip={\n              <p>\n                A string like <code>Sheet1!A1:B2</code>, that refers to a group of cells in the spreadsheet, and is\n                typically used in formulas. Named ranges are also supported. When a named range conflicts with a\n                sheet&rsquo;s name, the named range is preferred.\n              </p>\n            }\n          >\n            Range\n          </InlineFormLabel>\n          <input\n            className=\"gf-form-input width-14\"\n            value={query.range || ''}\n            placeholder=\"ie: Class Data!A2:E\"\n            onChange={this.onRangeChange}\n            onBlur={onRunQuery}\n          ></input>\n          <div className=\"gf-form gf-form--grow\">\n            <div className=\"gf-form-label gf-form-label--grow\" />\n          </div>\n        </div>\n        <div className=\"gf-form-inline\">\n          <InlineFormLabel\n            width={10}\n            className=\"query-keyword\"\n            tooltip=\"Time in seconds that the spreadsheet will be cached in Grafana after receiving a response from the spreadsheet API\"\n          >\n            Cache Time\n          </InlineFormLabel>\n          <Segment\n            value={{ label: formatCacheTimeLabel(query.cacheDurationSeconds), value: query.cacheDurationSeconds }}\n            options={[0, 5, 10, 30, 60, 60 * 2, 60 * 5, 60 * 10, 60 * 30, 3600, 3600 * 2, 3600 * 5].map((value) => ({\n              label: formatCacheTimeLabel(value),\n              value,\n              description: value ? '' : 'Response is not cached at all',\n            }))}\n            onChange={({ value }) => onChange({ ...query, cacheDurationSeconds: value! })}\n          />\n          <div className=\"gf-form gf-form--grow\">\n            <div className=\"gf-form-label gf-form-label--grow\" />\n          </div>\n        </div>\n        <div className=\"gf-form-inline\">\n          <LegacyForms.Switch\n            label=\"Use Time Filter\"\n            labelClass={'width-10  query-keyword'}\n            tooltip=\"Apply the dashboard time range to the first time field\"\n            checked={query.useTimeFilter === true}\n            onChange={this.toggleUseTimeFilter}\n          />\n          <div className=\"gf-form gf-form--grow\">\n            <div className=\"gf-form-label gf-form-label--grow\" />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { DataQuery } from '@grafana/schema';\nimport { GoogleAuthType, GOOGLE_AUTH_TYPE_OPTIONS, DataSourceSecureJsonData } from '@grafana/google-sdk';\n\nexport const GoogleSheetsAuth = {\n  ...GoogleAuthType,\n  API: 'key',\n} as const;\n\nexport const googleSheetsAuthTypes = [\n  { label: 'API Key', value: GoogleSheetsAuth.API },\n  ...GOOGLE_AUTH_TYPE_OPTIONS\n];\n\nexport interface GoogleSheetsSecureJSONData extends DataSourceSecureJsonData {\n  apiKey?: string;\n}\n\nexport interface CacheInfo {\n  hit: boolean;\n  count: number;\n  expires: string;\n}\n\nexport interface SheetResponseMeta {\n  spreadsheetId: string;\n  range: string;\n  majorDimension: string;\n  cache: CacheInfo;\n  warnings: string[];\n}\n\n//-------------------------------------------------------------------------------\n// The Sheets specific types\n//-------------------------------------------------------------------------------\n\nexport interface SheetsQuery extends DataQuery {\n  spreadsheet: string;\n  range?: string;\n  cacheDurationSeconds?: number;\n  useTimeFilter?: boolean;\n}\n","import React from 'react';\nimport { Alert, useTheme2 } from '@grafana/ui';\nimport { GoogleSheetsAuth } from '../types';\n\ninterface Props {\n  authenticationType: string;\n}\n\nexport const ConfigurationHelp = ({ authenticationType }: Props) => {\n  const theme = useTheme2();\n  const renderHelpBody = () => {\n    switch (authenticationType) {\n      case GoogleSheetsAuth.API:\n        return (\n          <>\n            <h4>Generate an API key</h4>\n            <ol style={{ listStylePosition: 'inside' }}>\n              <li>\n                Open the{' '}\n                <a\n                  href=\"https://console.developers.google.com/apis/credentials\"\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                  style={{ color: theme.colors.text.link }}\n                >\n                  Credentials page\n                </a>{' '}\n                in the Google API Console.\n              </li>\n              <li>\n                Click <strong>Create Credentials</strong> and then click <strong>API key</strong>.\n              </li>\n              <li>\n                Copy the key and paste it in the API Key field above. The file contents are encrypted and saved in the\n                Grafana database.\n              </li>\n            </ol>\n          </>\n        );\n      case GoogleSheetsAuth.GCE:\n        return (\n          <>\n            <p>\n              When Grafana is running on a Google Compute Engine (GCE) virtual machine, Grafana can automatically\n              retrieve default credentials from the metadata server. As a result, there is no need to generate a private\n              key file for the service account. You also do not need to upload the file to Grafana. The following\n              preconditions must be met before Grafana can retrieve default credentials.\n            </p>\n\n            <ol style={{ listStylePosition: 'inside', marginBottom: theme.spacing() }}>\n              <li>\n                You must create a Service Account for use by the GCE virtual machine. For more information, refer to{' '}\n                <a\n                  href=\"https://cloud.google.com/compute/docs/access/create-enable-service-accounts-for-instances#createanewserviceaccount\"\n                  target=\"_blank\"\n                  style={{ color: theme.colors.text.link }}\n                  rel=\"noreferrer noopener\"\n                >\n                  Create new service account\n                </a>\n                .\n              </li>\n              <li>\n                Verify that the GCE virtual machine instance is running as the service account that you created. For\n                more information, refer to{' '}\n                <a\n                  href=\"https://cloud.google.com/compute/docs/access/create-enable-service-accounts-for-instances#using\"\n                  target=\"_blank\"\n                  style={{ color: theme.colors.text.link }}\n                  rel=\"noreferrer noopener\"\n                >\n                  setting up an instance to run as a service account\n                </a>\n                .\n              </li>\n              <li>Allow access to the specified API scope.</li>\n            </ol>\n\n            <p>\n              For more information about creating and enabling service accounts for GCE instances, refer to{' '}\n              <a\n                href=\"https://cloud.google.com/compute/docs/access/create-enable-service-accounts-for-instances\"\n                target=\"_blank\"\n                style={{ color: theme.colors.text.link }}\n                rel=\"noreferrer noopener\"\n              >\n                enabling service accounts for instances in Google documentation\n              </a>\n              .\n            </p>\n          </>\n        );\n      default:\n        // Default is JWT\n        return (\n          <>\n            <h4>Generate a JWT file</h4>\n            <ol style={{ listStylePosition: 'inside', marginBottom: theme.spacing() }}>\n              <li>\n                Open the{' '}\n                <a\n                  href=\"https://console.developers.google.com/apis/credentials\"\n                  target=\"_blank\"\n                  style={{ color: theme.colors.text.link }}\n                  rel=\"noreferrer noopener\"\n                >\n                  Credentials\n                </a>{' '}\n                page in the Google API Console.\n              </li>\n              <li>\n                Click <strong>Create Credentials</strong> then click <strong>Service account</strong>.\n              </li>\n              <li>On the Create service account page, enter the Service account details.</li>\n              <li>\n                On the <code>Create service account</code> page, fill in the <code>Service account details</code> and\n                then click <code>Create</code>\n              </li>\n              <li>\n                On the <code>Service account permissions</code> page, don&rsquo;t add a role to the service account.\n                Just click <code>Continue</code>\n              </li>\n              <li>\n                In the next step, click <code>Create Key</code>. Choose key type <code>JSON</code> and click{' '}\n                <code>Create</code>. A JSON key file will be created and downloaded to your computer\n              </li>\n              <li>\n                Open the{' '}\n                <a\n                  href=\"https://console.cloud.google.com/apis/library/sheets.googleapis.com?q=sheet\"\n                  target=\"_blank\"\n                  style={{ color: theme.colors.text.link }}\n                  rel=\"noreferrer noopener\"\n                >\n                  Google Sheets\n                </a>{' '}\n                in API Library and enable access for your account\n              </li>\n              <li>\n                Open the{' '}\n                <a\n                  href=\"https://console.cloud.google.com/apis/library/drive.googleapis.com?q=drive\"\n                  target=\"_blank\"\n                  style={{ color: theme.colors.text.link }}\n                  rel=\"noreferrer noopener\"\n                >\n                  Google Drive\n                </a>{' '}\n                in API Library and enable access for your account. Access to the Google Drive API is used to list all\n                spreadsheets that you have access to.\n              </li>\n              <li>\n                Share any private files/folders you want to access with the service account&apos;s email address. The\n                email is specified as <code>client_email</code> in the Google JWT File.\n              </li>\n              <li>\n                Drag the file to the dotted zone above. Then click <code>Save & Test</code>. The file contents will be\n                encrypted and saved in the Grafana database.\n              </li>\n            </ol>\n          </>\n        );\n    }\n  };\n  return (\n    <Alert title=\"How to configure Google Sheets datasource?\" severity=\"info\" bottomSpacing={4}>\n      {renderHelpBody()}\n    </Alert>\n  );\n};\n","import { DataSourcePluginOptionsEditorProps, onUpdateDatasourceSecureJsonDataOption } from '@grafana/data';\nimport { AuthConfig, DataSourceOptions } from '@grafana/google-sdk';\nimport { Field, LegacyForms, SecretInput } from '@grafana/ui';\nimport React from 'react';\nimport { GoogleSheetsAuth, GoogleSheetsSecureJSONData, googleSheetsAuthTypes } from '../types';\nimport { getBackwardCompatibleOptions } from '../utils';\nimport { ConfigurationHelp } from './ConfigurationHelp';\n\nconst { SecretFormField } = LegacyForms;\n\nexport type Props = DataSourcePluginOptionsEditorProps<DataSourceOptions, GoogleSheetsSecureJSONData>;\n\nexport function ConfigEditor(props: Props) {\n  const options = getBackwardCompatibleOptions(props.options);\n  const apiKeyProps = {\n    isConfigured: Boolean(options.secureJsonFields.apiKey),\n    value: options.secureJsonData?.apiKey || '',\n    placeholder: 'Enter API key',\n    id: 'apiKey',\n    onReset: () =>\n      props.onOptionsChange({\n        ...options,\n        secureJsonFields: { ...options.secureJsonFields, apiKey: false },\n        secureJsonData: { apiKey: '' },\n        jsonData: options.jsonData,\n      }),\n    onChange: onUpdateDatasourceSecureJsonDataOption(props, 'apiKey'),\n  };\n\n  return (\n    <>\n      <ConfigurationHelp authenticationType={options.jsonData.authenticationType} />\n\n      <AuthConfig authOptions={googleSheetsAuthTypes} onOptionsChange={props.onOptionsChange} options={options} />\n\n      {options.jsonData.authenticationType === GoogleSheetsAuth.API && (\n        <>\n          {/* Backward compatibility check. SecretInput was added in 8.5 */}\n          {!!SecretInput ? (\n            <Field label=\"API key\">\n              <SecretInput {...apiKeyProps} width={60} />\n            </Field>\n          ) : (\n            <SecretFormField {...apiKeyProps} label=\"API key\" labelWidth={10} inputWidth={20} />\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import { DataFrame, MetadataInspectorProps } from '@grafana/data';\nimport { DataSourceOptions } from '@grafana/google-sdk';\nimport React, { PureComponent } from 'react';\nimport { DataSource } from '../DataSource';\nimport { SheetResponseMeta, SheetsQuery } from '../types';\n\nexport type Props = MetadataInspectorProps<DataSource, SheetsQuery, DataSourceOptions>;\n\nexport class MetaInspector extends PureComponent<Props> {\n  state = { index: 0 };\n\n  renderInfo = (frame: DataFrame) => {\n    const meta = frame.meta?.custom as SheetResponseMeta;\n    if (!meta) {\n      return null;\n    }\n\n    return (\n      <div>\n        <h3>Info</h3>\n        <pre>{JSON.stringify(meta, null, 2)}</pre>\n      </div>\n    );\n  };\n\n  render() {\n    const { data } = this.props;\n    if (!data || !data.length) {\n      return <div>No Data</div>;\n    }\n    return (\n      <div>\n        <h3>Google Sheets Metadata</h3>\n        {data.map((frame) => {\n          return this.renderInfo(frame);\n        })}\n      </div>\n    );\n  }\n}\n","import { DataSourceInstanceSettings, ScopedVars, SelectableValue } from '@grafana/data';\nimport { DataSourceOptions } from '@grafana/google-sdk';\nimport { DataSourceWithBackend, getTemplateSrv } from '@grafana/runtime';\nimport { SheetsQuery } from './types';\n\nexport class DataSource extends DataSourceWithBackend<SheetsQuery, DataSourceOptions> {\n  authType: string;\n  constructor(instanceSettings: DataSourceInstanceSettings<DataSourceOptions>) {\n    super(instanceSettings);\n    this.authType = instanceSettings.jsonData.authenticationType;\n  }\n\n  // Enables default annotation support for 7.2+\n  annotations = {};\n\n  // Support template variables for spreadsheet and range\n  applyTemplateVariables(query: SheetsQuery, scopedVars: ScopedVars) {\n    const templateSrv = getTemplateSrv();\n    return {\n      ...query,\n      spreadsheet: templateSrv.replace(query.spreadsheet, scopedVars),\n      range: query.range ? templateSrv.replace(query.range, scopedVars) : '',\n    };\n  }\n\n  async getSpreadSheets(): Promise<Array<SelectableValue<string>>> {\n    return this.getResource('spreadsheets').then(({ spreadsheets }) =>\n      spreadsheets\n        ? Object.entries(spreadsheets).map(([value, label]) => ({ label, value } as SelectableValue<string>))\n        : []\n    );\n  }\n}\n","import { DataSourcePlugin } from '@grafana/data';\nimport { DataSourceOptions } from '@grafana/google-sdk';\nimport { ConfigEditor, MetaInspector, QueryEditor } from './components';\nimport { DataSource } from './DataSource';\nimport { SheetsQuery } from './types';\n\nexport const plugin = new DataSourcePlugin<DataSource, SheetsQuery, DataSourceOptions>(DataSource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor)\n  .setMetadataInspector(MetaInspector);\n","import { GoogleSheetsAuth } from './types';\nimport { Props } from './components/ConfigEditor';\n\nexport function getBackwardCompatibleOptions(options: Props['options']): Props['options'] {\n  const changedOptions = { ...options };\n  // Make sure we support the old authType property\n  changedOptions.jsonData.authenticationType = options.jsonData.authenticationType || options.jsonData.authType!;\n\n  // Show a configured message for the JWT fields when JWT is set in secureJsonFields\n  if (changedOptions.jsonData.authenticationType === GoogleSheetsAuth.JWT && options.secureJsonFields?.jwt) {\n    changedOptions.jsonData.clientEmail = 'configured';\n    changedOptions.jsonData.defaultProject = 'configured';\n    changedOptions.jsonData.tokenUri = 'configured';\n    changedOptions.secureJsonFields.privateKey = true;\n  }\n\n  return changedOptions;\n}\n"],"names":["e","t","a","n","o","default","l","i","JWT","GCE","v","T","onChange","showConfigEditor","useState","r","d","p","useTheme2","f","useCallback","m","g","trim","JSON","parse","b","isValid","privateKey","private_key","tokenUri","token_uri","clientEmail","client_email","projectId","project_id","error","createElement","Fragment","Field","label","invalid","Boolean","description","FileDropzone","options","multiple","accept","readAs","onLoad","style","margin","fontSize","typography","h4","textAlign","Button","fill","TextArea","autoFocus","placeholder","onBlur","currentTarget","value","rows","type","color","colors","primary","text","onClick","paddingRight","paddingLeft","isObject","filter","length","join","SecretFormField","j","LegacyForms","k","PATH","J","onReset","onOptionsChange","s","privateKeyPath","jsonData","c","onUpdateDatasourceJsonDataOption","u","className","isConfigured","secureJsonFields","secureJsonData","onUpdateDatasourceSecureJsonDataOption","Input","id","width","defaultProject","SecretInput","Object","assign","labelWidth","inputWidth","O","P","ariaLabel","exports","AuthConfig","authOptions","authenticationType","h","FieldSet","RadioButtonGroup","GOOGLE_AUTH_TYPE_OPTIONS","GoogleAuthType","module","__WEBPACK_EXTERNAL_MODULE__305__","__WEBPACK_EXTERNAL_MODULE__545__","__WEBPACK_EXTERNAL_MODULE__388__","__WEBPACK_EXTERNAL_MODULE__980__","__WEBPACK_EXTERNAL_MODULE__650__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","definition","key","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","toGoogleURL","info","url","spreadsheet","range","formatCacheTimeLabel","QueryEditor","PureComponent","componentDidMount","this","props","query","cacheDurationSeconds","render","onRunQuery","datasource","div","InlineFormLabel","tooltip","code","SegmentAsync","loadOptions","getSpreadSheets","allowCustomValue","onSpreadsheetIDChange","LinkButton","marginTop","icon","href","target","input","onRangeChange","Segment","map","labelClass","checked","useTimeFilter","toggleUseTimeFilter","event","item","test","idx","indexOf","substring","getGoogleSheetRangeInfoFromURL","GoogleSheetsAuth","API","googleSheetsAuthTypes","ConfigurationHelp","theme","Alert","title","severity","bottomSpacing","ol","listStylePosition","li","rel","link","strong","marginBottom","spacing","renderHelpBody","MetaInspector","data","h3","frame","renderInfo","state","index","meta","custom","pre","stringify","DataSource","DataSourceWithBackend","applyTemplateVariables","scopedVars","templateSrv","getTemplateSrv","replace","getResource","then","spreadsheets","entries","constructor","instanceSettings","super","annotations","authType","plugin","DataSourcePlugin","setConfigEditor","changedOptions","jwt","getBackwardCompatibleOptions","apiKeyProps","apiKey","setQueryEditor","setMetadataInspector"],"sourceRoot":""}